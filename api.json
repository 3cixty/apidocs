{
    "swagger": "2.0",
    "info": {
        "description": "3cixty APIs\n\nGetting Started:\n\n - To get started depending on your needs you either need `3cixty App Key` or `3cixty access_token` or `Google access_token` or `Facebook access_token`. The only APIs where above mentioned parameters are not required are [validate sparql query conformity with sparql 1.1 API]() and [know scopes in 3cixty API]().\n - To get the `3cixty App Key` please use the [link](appchallenge) alternatviely you can also use the [getAppKey]() API below. In such a case you will need your google access token please open [https://api.3cixty.com/v2/googleToken.jsp](https://api.3cixty.com/v2/googleToken.jsp) on your web browser to get your `Google access_token`.\n - Once you have the `3cixty App key` please use the API as need. Note that some APIs use `3cixty access_token` while some need `Google access_token`. To get your `3cixty access_token` from `Google access_token` use the [/getAccessToken]() API. \n   \n",
        "version": "2.0.0",
        "title": "3cixty APIs",
        "contact": {
            "name": "3cixty API support",
            "url": "https://www.3cixty.com/legal-information.html",
            "email": "contact@3cixty.com"
        },
        "termsOfService": "https://www.3cixty.com/terms.html",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "dev.3cixty.com",
    "basePath": "/v2",
    "schemes": [
        "https"
    ],
    "paths": {
        "/augmentAndExecute": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - Rich REST API"
                ],
                "summary": "Making augmented queries to the 3cixty KB",
                "description": "The API makes a query to the `3cixty` KB.\nNote that it depends on your queries, you might get information about events, as well as places of interest.\nTo execute a query without augmentation, please use another API.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A `3cixty access_token`. If the `3cixty access_token` is invalid (incorrect or expired), the `HTTP status code = 400` will be returned.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "A sparql query\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Requested result format (rdf or json)\n",
                        "required": true,
                        "type": "string",
                        "default": "json",
                        "enum": [
                            "json",
                            "rdf"
                        ]
                    },
                    {
                        "name": "coef",
                        "in": "query",
                        "description": "value is set to provide the weight to the social augmentation results. Default value is = \"1\"\n",
                        "required": false,
                        "type": "string",
                        "default": "1"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "chosen from the set = {`enteredrating`, `friends`}. This value is used to augment a given query based on user profile\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "debug",
                        "in": "query",
                        "description": "Default value is \"off\"\n",
                        "type": "string",
                        "default": "off",
                        "enum": [
                            "on",
                            "off"
                        ]
                    },
                    {
                        "name": "turnOffQA",
                        "in": "query",
                        "description": "value is set to turn off the augmentation. Default value is \"true\"\n",
                        "type": "string",
                        "default": "true",
                        "enum": [
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with `Json/RDF`. Result set in the entity. Where the entity is result\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "either \"The format is not supported or query is null\" or you can also get \"The key is invalid message\".\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/augmentAndExecute2": {
            "post": {
                "tags": [
                    "QueryManager/Augmentation API - Rich REST API"
                ],
                "summary": "Making augmented queries to the 3cixty KB",
                "description": "The API makes a query to the `3cixty` KB.\nNote that it depends on your queries, you might get information about events, as well as places of interest.\nTo execute a query without augmentation, please use another API.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A `3cixty access_token`. If the `3cixty access_token` is invalid (incorrect or expired), the `HTTP status code = 400` will be returned.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "A sparql query\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Requested result format (rdf or json)\n",
                        "required": true,
                        "type": "string",
                        "default": "json",
                        "enum": [
                            "json",
                            "rdf"
                        ]
                    },
                    {
                        "name": "coef",
                        "in": "query",
                        "description": "value is set to provide the weight to the social augmentation results. Default value is = \"1\"",
                        "required": false,
                        "type": "string",
                        "default": "1"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "chosen from the set = {`enteredrating`, `friends`}. This value is used to augment a given query based on user profile\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "debug",
                        "in": "query",
                        "description": "Default value is \"off\"\n",
                        "type": "string",
                        "default": "off",
                        "enum": [
                            "on",
                            "off"
                        ]
                    },
                    {
                        "name": "turnOffQA",
                        "in": "query",
                        "description": "value is set to turn off the augmentation. Default value is \"true\"\n",
                        "type": "string",
                        "default": "true",
                        "enum": [
                            "true",
                            "false"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with `Json/RDF`. Result set in the entity. Where the entity is result\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "either \"The format is not supported or query is null\" or you can also get \"The key is invalid message\".\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/executeQuery": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - Rich REST API"
                ],
                "summary": "Making queries to the 3cixty KB",
                "description": "The API makes a query to the `3cixty` KB.\nNote that it depends on your queries, you might get information about events, as well as places of interest.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App Key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "A sparql query. To test here use url endocded query\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Requested result format (rdf or json)\n",
                        "required": true,
                        "type": "string",
                        "default": "json",
                        "enum": [
                            "json",
                            "rdf"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with `JSON/RDF` Result set in the entity. Where the entity is result.\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "either \"The format is not supported or query is null\" or you can also get \"The key is invalid message\".\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/executeQuery2": {
            "post": {
                "tags": [
                    "QueryManager/Augmentation API - Rich REST API"
                ],
                "summary": "Making queries to the 3cixty KB",
                "description": "The API makes a query to the `3cixty` KB.\nNote that it depends on your queries, you might get information about events, as well as places of interest.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App Key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "formData",
                        "description": "A sparql query. To test here use url endocded.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "formData",
                        "description": "Requested result format (rdf or json)\n",
                        "required": true,
                        "type": "string",
                        "default": "json",
                        "enum": [
                            "json",
                            "rdf"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with `JSON/RDF` Result set in the entity. Where the entity is result\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "either \"The format is not supported or query is null\" or you can also get \"The key is invalid message\".\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getElementsInDetails": {
            "post": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get get elements (Event/PoI) full information",
                "description": "The API is used to get elements in the `3cixty` KB (Events, POIs) with full information.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App Key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "events",
                        "in": "query",
                        "description": "List of event IDs. Two event IDs are separated by a comma\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "place",
                        "in": "query",
                        "description": "List of PoI IDs. Two PoI IDs are separated by a comma.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with `JSON/RDF` Result set in the entity. Where the entity is either a place or event\n",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\"\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/countItems": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Count Events",
                "description": "The API is used to count events in the `3cixty` KB.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`,  `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with `JSON/RDF` Result set in the entity. Where the entity is count of items.\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\"\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/countPoIs": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Count PoIs",
                "description": "The API is used to count events in the `3cixty` KB.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with `JSON/RDF` Result set in the entity. Where the entity is count of places.\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\"\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getAggregatedItems/{group}": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get aggregated events",
                "description": "This API is used to returns aggregated events.\nLet us now describe parameters used\n - `group` here `<group>` can be one of six values from the following set: { `locality`, `category`, `country`, `publisher`, `placeName`, `artist` }.\n - `filter1` is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. \n   Example for `filter1` is `{\"groupBy\":\"locality\",\"value\" :\"Milan\"}`\n\n    Note that the value of `<groupby>` in `filter1` should be different from a value you use in the URL for your HTTP request.\n - `filter2` is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. \n    Example for `filter1` is `{\"groupBy\":\"country\",\"value\":\"france\"}`\n\n    Note that the value of `<groupby>` in `filter2` should be different from a value you use in the URL for your HTTP request and the value you used for `filter1`.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App Key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "path",
                        "description": "here `<group>` can be one of six values from the following set: { `locality`, `category`, `country`, `publisher`, `placeName`, `artist` }.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. \n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "filter1",
                        "in": "query",
                        "description": "is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. Example for `filter1` is `{\"groupBy\":\"locality\",\"value\":\"Milan\"}`\nNote that the value of `<groupby>` in `filter1` should be different from a value you use in the URL for your HTTP request. \n",
                        "default": "{}",
                        "type": "string"
                    },
                    {
                        "name": "filter2",
                        "in": "query",
                        "description": "is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional.  Example for `filter1` is `{\"groupBy\":\"country\",\"value\":\"france\"}`\nNote that the value of `<groupby>` in `filter2` should be different from a value you use in the URL for your HTTP request and the value you used for `filter1`.\n",
                        "default": "{}",
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a `JSON` output defined by the value of `<groupby>` and the count that defines the number of entries under same unique `<groupby>`\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" or \"The group is invalid. The group is one of locality, category, country, publishe, placeName, and artist\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getAggregatedPoIs": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get aggregated POIs",
                "description": "This API is used to returns aggregated POIs. The POIs are aggregated based on category of the POIs.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App Key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. \n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a `JSON` output\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getItems": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get events with details",
                "description": "This API is used to returns aggregated events.\nLet us now describe parameters used\n - `preference` can be one of the following values: `friend`,  `enteredrating`. This value is used to augment a given query based on user profile.\n - `groupby` here `<groupby>` can be one of six values from the following set: { `locality`, `category`, `country`, `publisher`, `placeName`, `artist` }.\n - `filter1` is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. \n   Example for `filter1` is `{\"groupBy\":\"locality\",\"value\" :\"Milan\"}`\n - `filter2` is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. \n    Example for `filter1` is `{\"groupBy\":\"country\",\"value\":\"france\"}`\n\n    Note that the value of `<groupby>` in `filter2` should be different from a value you used for `filter1`.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. \n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "filter1",
                        "in": "query",
                        "description": "is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. Example for `filter1` is `{\"groupBy\":\"locality\",\"value\":\"Milan\"}`\n",
                        "default": "{}",
                        "type": "string"
                    },
                    {
                        "name": "filter2",
                        "in": "query",
                        "description": "is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional.  Example for `filter1` is `{\"groupBy\":\"country\",\"value\":\"france\"}`\nNote that the value of `<groupby>` in `filter2` should be different from a value you used for `filter1`.\n",
                        "default": "{}",
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    },
                    {
                        "name": "preference",
                        "in": "query",
                        "description": "can be one of the following values: `friend`,  `enteredrating`. This value is used to augment a given query based on user profile.\n",
                        "default": "",
                        "enum": [
                            "",
                            "friend",
                            "enteredrating"
                        ],
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a `JSON` output defined by the value of `<groupby>` and the count that defines the number of entries under same unique `<groupby>`\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getPoIs": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get PoIs in detail",
                "description": "The API is used to get POIs with details from the KnowledgeBase.\nLet us now describe parameters used\n - `preference` can be one of the following values: `friend`,  `enteredrating`. This value is used to augment a given query based on user profile.\n - `category` is the businessType of the POI. for ex. `Restaurant`.\n - `minRating` Min. Rating of the POI. The Returned POIs should have rating more than minRating\n - `maxRating` Max Rating of the POI. The Returned POIs should have rating less than maxRating \n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. \n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "is the businessType of the POI. for ex. `Restaurant`. \n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "minRating",
                        "in": "query",
                        "description": "Min. Rating of the POI. The Returned POIs should have rating more than minRating\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "maxRating",
                        "in": "query",
                        "description": "Max. Rating of the POI. The Returned POIs should have rating less than maxRating\n",
                        "default": 5,
                        "type": "integer"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    },
                    {
                        "name": "preference",
                        "in": "query",
                        "description": "can be one of the following values: `friend`,  `enteredrating`. This value is used to augment a given query based on user profile.\n",
                        "default": "",
                        "enum": [
                            "",
                            "friend",
                            "enteredrating"
                        ],
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a `JSON` output defined by the value of `<groupby>` and the count that defines the number of entries under same unique `<groupby>`\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getItemsWithoutAccessToken": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get events with details without 3cixty access_token",
                "description": "The API is used to get Events with details from the KnowledgeBase.\nLet us now describe parameters used\n - `groupby` here `<groupby>` can be one of six values from the following set: { `locality`, `category`, `country`, `publisher`, `placeName`, `artist` }.\n - `filter1` is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. \n   Example for `filter1` is `{\"groupBy\":\"locality\",\"value\" :\"Milan\"}`\n - `filter2` is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. \n    Example for `filter1` is `{\"groupBy\":\"country\",\"value\":\"france\"}`\n\n    Note that the value of `<groupby>` in `filter2` should be different from a value you used for `filter1`.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. \n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "filter1",
                        "in": "query",
                        "description": "is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. Example for `filter1` is `{\"groupBy\":\"locality\",\"value\":\"Milan\"}`\n",
                        "default": "{}",
                        "type": "string"
                    },
                    {
                        "name": "filter2",
                        "in": "query",
                        "description": "is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional.  Example for `filter1` is `{\"groupBy\":\"country\",\"value\":\"france\"}`\nNote that the value of `<groupby>` in `filter2` should be different from a value you used for `filter1`.\n",
                        "default": "{}",
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a `JSON` output defined by the value of `<groupby>` and the count that defines the number of entries under same unique `<groupby>`\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getPoIsWithoutAccessToken": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get PoIs with details without 3cixty access_token",
                "description": "The API is used to get POIs with details from the KnowledgeBase.\nLet us now describe parameters used\n - `category` is the businessType of the POI. for ex. `Restaurant`.\n - `minRating` Min. Rating of the POI. The Returned POIs should have rating more than minRating\n - `maxRating` Max Rating of the POI. The Returned POIs should have rating less than maxRating \n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. \n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "is the businessType of the POI. for ex. `Restaurant`. \n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "minRating",
                        "in": "query",
                        "description": "Min. Rating of the POI. The Returned POIs should have rating more than minRating\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "maxRating",
                        "in": "query",
                        "description": "Max. Rating of the POI. The Returned POIs should have rating less than maxRating\n",
                        "default": 5,
                        "type": "integer"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a `JSON` output defined by the value of `<groupby>` and the count that defines the number of entries under same unique `<groupby>`\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getEventsInDetailsWithoutAccessToken": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get events with full details without 3cixty access_token",
                "description": "The API is used to get Events for full information from the KnowledgeBase.\nLet us now describe parameters used\n - `groupby` here `<groupby>` can be one of six values from the following set: { `locality`, `category`, `country`, `publisher`, `placeName`, `artist` }.\n - `filter1` is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. \n   Example for `filter1` is `{\"groupBy\":\"locality\",\"value\" :\"Milan\"}`\n - `filter2` is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. \n    Example for `filter1` is `{\"groupBy\":\"country\",\"value\":\"france\"}`\n\n    Note that the value of `<groupby>` in `filter2` should be different from a value you used for `filter1`.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. \n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "filter1",
                        "in": "query",
                        "description": "is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional. Example for `filter1` is `{\"groupBy\":\"locality\",\"value\":\"Milan\"}`\n",
                        "default": "{}",
                        "type": "string"
                    },
                    {
                        "name": "filter2",
                        "in": "query",
                        "description": "is a pair in `JSON` format following structure `{ \"groupBy\": \"<groupby>\", \"value\": \"<value>\" }` where `<groupby>` is one value from the above set and `<value>` is a string value you have to set to this <groupby>. This parameter is optional.  Example for `filter1` is `{\"groupBy\":\"country\",\"value\":\"france\"}`\nNote that the value of `<groupby>` in `filter2` should be different from a value you used for `filter1`.\n",
                        "default": "{}",
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a `JSON` output defined by the value of `<groupby>` and the count that defines the number of entries under same unique `<groupby>`\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getPoIsInDetailsWithoutAccessToken": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get PoIs with full details without 3cixty access_token",
                "description": "The API is used to get POIs with details from the KnowledgeBase.\nLet us now describe parameters used\n - `category` is the businessType of the POI. for ex. `Restaurant`.\n - `minRating` Min. Rating of the POI. The Returned POIs should have rating more than minRating\n - `maxRating` Max Rating of the POI. The Returned POIs should have rating less than maxRating \n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. \n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "is the businessType of the POI. for ex. `Restaurant`. \n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "minRating",
                        "in": "query",
                        "description": "Min. Rating of the POI. The Returned POIs should have rating more than minRating\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "maxRating",
                        "in": "query",
                        "description": "Max. Rating of the POI. The Returned POIs should have rating less than maxRating\n",
                        "default": 5,
                        "type": "integer"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a `JSON` output defined by the value of `<groupby>` and the count that defines the number of entries under same unique `<groupby>`\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getNearbyPoIs": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get nearby PoIs of a PoI",
                "description": "The API is used to get nearby POIs from a given PoI ID.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "poi",
                        "in": "query",
                        "description": "a PoI identity.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. Note that if limit is large, it takes a lot of time to list nearby PoIs.\n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "topCategories",
                        "in": "query",
                        "description": "is a list of top categories. Two top categories are separated by a comma. By default, if you don't give this parameter, it takes into account of all top categories.\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "is a list of categories. Two categories are separated by a comma, for example: `Restaurant` or `Restaurant,Hotel`. This parameter is optional. If you don't provide it, it will take into account of all categories related to PoIs. Here is a list of top 20 categories (please use only `Establishment` for example, we show a list in `JSON` format to have an idea about number of items in the corresponding category).\n\n ```json\n  [  \n    {  \n      \"count\":{  \n        \"value\":\"71935\"\n      },\n      \"category\":{  \n        \"value\":\"Establishment\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"12017\"\n      },\n      \"category\":{  \n        \"value\":\"Restaurant\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"11045\"\n      },\n      \"category\":{  \n        \"value\":\"Home (private)\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"8085\"\n      },\n      \"category\":{  \n        \"value\":\"Store\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"6031\"\n      },\n      \"category\":{  \n        \"value\":\"Bar\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"4916\"\n      },\n      \"category\":{  \n        \"value\":\"Food\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"3796\"\n      },\n      \"category\":{  \n        \"value\":\"Office\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2766\"\n      },\n      \"category\":{  \n        \"value\":\"Health\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2536\"\n      },\n      \"category\":{  \n        \"value\":\"Hotel\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2391\"\n      },\n      \"category\":{  \n        \"value\":\"CafÃ©\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1956\"\n      },\n      \"category\":{  \n        \"value\":\"Finance\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1735\"\n      },\n      \"category\":{  \n        \"value\":\"Italian Restaurant\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1724\"\n      },\n      \"category\":{  \n        \"value\":\"Bank\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1620\"\n      },\n      \"category\":{  \n        \"value\":\"Lawyers\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1482\"\n      },\n      \"category\":{  \n        \"value\":\"Bars\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1465\"\n      },\n      \"category\":{  \n        \"value\":\"Italian\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1447\"\n      },\n      \"category\":{  \n        \"value\":\"Hair Salons\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1416\"\n      },\n      \"category\":{  \n        \"value\":\"Residential Building (Apartment / Condo)\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1405\"\n      },\n      \"category\":{  \n        \"value\":\"Building\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1395\"\n      },\n      \"category\":{  \n        \"value\":\"Pizza Place\"\n      }\n    }\n   ]\n\n ```\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "description": "The radius to list PoIs. The value is in kilometers.\n",
                        "default": -1,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a string in JSON format\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getNearbyPoIsBasedOnGPS": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get nearby PoIs to a given GPS location",
                "description": "The API is used to get nearby POIs from a given GPS location.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "latitude.\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "longitude.\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. Note that if limit is large, it takes a lot of time to list nearby PoIs.\n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "topCategories",
                        "in": "query",
                        "description": "is a list of top categories. Two top categories are separated by a comma. By default, if you don't give this parameter, it takes into account of all top categories.\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "is a list of categories. Two categories are separated by a comma, for example: `Restaurant` or `Restaurant,Hotel`. This parameter is optional. If you don't provide it, it will take into account of all categories related to PoIs. Here is a list of top 20 categories (please use only `Establishment` for example, we show a list in `JSON` format to have an idea about number of items in the corresponding category).\n\n ```json\n  [  \n    {  \n      \"count\":{  \n        \"value\":\"71935\"\n      },\n      \"category\":{  \n        \"value\":\"Establishment\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"12017\"\n      },\n      \"category\":{  \n        \"value\":\"Restaurant\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"11045\"\n      },\n      \"category\":{  \n        \"value\":\"Home (private)\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"8085\"\n      },\n      \"category\":{  \n        \"value\":\"Store\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"6031\"\n      },\n      \"category\":{  \n        \"value\":\"Bar\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"4916\"\n      },\n      \"category\":{  \n        \"value\":\"Food\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"3796\"\n      },\n      \"category\":{  \n        \"value\":\"Office\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2766\"\n      },\n      \"category\":{  \n        \"value\":\"Health\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2536\"\n      },\n      \"category\":{  \n        \"value\":\"Hotel\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2391\"\n      },\n      \"category\":{  \n        \"value\":\"CafÃ©\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1956\"\n      },\n      \"category\":{  \n        \"value\":\"Finance\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1735\"\n      },\n      \"category\":{  \n        \"value\":\"Italian Restaurant\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1724\"\n      },\n      \"category\":{  \n        \"value\":\"Bank\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1620\"\n      },\n      \"category\":{  \n        \"value\":\"Lawyers\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1482\"\n      },\n      \"category\":{  \n        \"value\":\"Bars\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1465\"\n      },\n      \"category\":{  \n        \"value\":\"Italian\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1447\"\n      },\n      \"category\":{  \n        \"value\":\"Hair Salons\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1416\"\n      },\n      \"category\":{  \n        \"value\":\"Residential Building (Apartment / Condo)\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1405\"\n      },\n      \"category\":{  \n        \"value\":\"Building\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1395\"\n      },\n      \"category\":{  \n        \"value\":\"Pizza Place\"\n      }\n    }\n   ]\n\n ```\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "description": "The radius to list PoIs. The value is in kilometers.\n",
                        "default": -1,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a string in JSON format\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getNearbyEvents": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get nearby Events of a event within a given distance",
                "description": "The API is used to get nearby Events of a event within a given distance.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "a event identity.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. Note that if limit is large, it takes a lot of time to list nearby Events.\n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "is a list of categories. Two categories are separated by a comma, for example: `Music` or `Music,Music Concert`. This parameter is optional. If you don't provide it, it will take into account of all categories related to Events. \n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "description": "The radius to list Events. The value is in kilometers.\n",
                        "default": -1,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a string in JSON format\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getNearbyEventsBasedOnGPS": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get nearby Events of a given GPS location",
                "description": "The API is used to get nearby Events of a given GPS location.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "latitude.\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "longitude.\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. Note that if limit is large, it takes a lot of time to list nearby Events.\n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "is a list of categories. Two categories are separated by a comma, for example: `Music` or `Music,Music Concert`. This parameter is optional. If you don't provide it, it will take into account of all categories related to Events. \n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "description": "The radius to list Events. The value is in kilometers.\n",
                        "default": -1,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a string in JSON format\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getAugmentedNearbyPoIsBasedOnGPS": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get nearby PoIs to a given GPS location based on Wish List",
                "description": "The API is used to augment nearby POIs from a given GPS location. Nearby PoI augmentation is a feature to get nearby PoIs highlighting ones found from WishLists of friends list. The order of received nearby PoIs is first based on \"highlighted\" attribute, then distance is taken as the second key to decide the order if two PoIs have the same \"highlighted attribute\"â€\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "latitude.\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "longitude.\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. Note that if limit is large, it takes a lot of time to list nearby PoIs.\n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "topCategories",
                        "in": "query",
                        "description": "is a list of top categories. Two top categories are separated by a comma. By default, if you don't give this parameter, it takes into account of all top categories.\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "is a list of categories. Two categories are separated by a comma, for example: `Restaurant` or `Restaurant,Hotel`. This parameter is optional. If you don't provide it, it will take into account of all categories related to PoIs. Here is a list of top 20 categories (please use only `Establishment` for example, we show a list in `JSON` format to have an idea about number of items in the corresponding category).\n\n ```json\n  [  \n    {  \n      \"count\":{  \n        \"value\":\"71935\"\n      },\n      \"category\":{  \n        \"value\":\"Establishment\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"12017\"\n      },\n      \"category\":{  \n        \"value\":\"Restaurant\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"11045\"\n      },\n      \"category\":{  \n        \"value\":\"Home (private)\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"8085\"\n      },\n      \"category\":{  \n        \"value\":\"Store\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"6031\"\n      },\n      \"category\":{  \n        \"value\":\"Bar\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"4916\"\n      },\n      \"category\":{  \n        \"value\":\"Food\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"3796\"\n      },\n      \"category\":{  \n        \"value\":\"Office\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2766\"\n      },\n      \"category\":{  \n        \"value\":\"Health\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2536\"\n      },\n      \"category\":{  \n        \"value\":\"Hotel\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"2391\"\n      },\n      \"category\":{  \n        \"value\":\"CafÃ©\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1956\"\n      },\n      \"category\":{  \n        \"value\":\"Finance\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1735\"\n      },\n      \"category\":{  \n        \"value\":\"Italian Restaurant\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1724\"\n      },\n      \"category\":{  \n        \"value\":\"Bank\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1620\"\n      },\n      \"category\":{  \n        \"value\":\"Lawyers\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1482\"\n      },\n      \"category\":{  \n        \"value\":\"Bars\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1465\"\n      },\n      \"category\":{  \n        \"value\":\"Italian\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1447\"\n      },\n      \"category\":{  \n        \"value\":\"Hair Salons\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1416\"\n      },\n      \"category\":{  \n        \"value\":\"Residential Building (Apartment / Condo)\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1405\"\n      },\n      \"category\":{  \n        \"value\":\"Building\"\n      }\n    },\n    {  \n      \"count\":{  \n        \"value\":\"1395\"\n      },\n      \"category\":{  \n        \"value\":\"Pizza Place\"\n      }\n    }\n   ]\n\n ```\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "description": "The radius to list PoIs. The value is in kilometers.\n",
                        "default": -1,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a string in JSON format\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"invalid access token\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getAugmentedNearbyEventsBasedOnGPS": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get nearby Events to a given GPS location based on Wish List",
                "description": "The API is used to augment nearby Events  from a given GPS location. Nearby Event augmentation is a feature to get nearby Events highlighting ones found from WishLists of friends list. The order of received nearby Events is first based on \"highlighted\" attribute, then distance is taken as the second key to decide the order if two Events have the same \"highlighted attribute\".\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "This header parameter is optional. If you donâ€™t specify it, all languages will be checked and we return data in one of the languages. You can use a format like `fr-FR`, `en-EN`, `en-US`, `fr`, `en`, `it`. You should use one of them.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "latitude.\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "longitude.\n",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset for listing aggregated items.\n",
                        "default": 0,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Size of result set for listing aggregated items. Note that if limit is large, it takes a lot of time to list nearby Events.\n",
                        "default": 20,
                        "type": "integer"
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "is a list of categories. Two categories are separated by a comma, for example: `Music` or `Music,Music Concert`. This parameter is optional. If you don't provide it, it will take into account of all categories related to Events. \n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "distance",
                        "in": "query",
                        "description": "The radius to list Events. The value is in kilometers.\n",
                        "default": -1,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return is a string in JSON format\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"The key is invalid message\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/validateQuery": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Validate sparql query",
                "description": "The API is used to check the conformity of the sparql query with sparql 1.1 standards.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "A sparql query.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return \"The given query conforms to SPARQL 1.1!!!\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Return \"incomprehensive query\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getTopCategories": {
            "get": {
                "tags": [
                    "QueryManager/Augmentation API - REST API"
                ],
                "summary": "Get list of top categories",
                "description": "The API is used to get the list of top categories.\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The city of choice. Currently supported cities are `milan`, `london`, `nice`.\n",
                        "default": "milan",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with `JSON` Result set in the entity. Where the entity is list of top categories.\n An example is `[\"ARTS&ENTERTAINMENT\",\"COLLEGE&UNIVERSITY\",\"EVENT\",\"FAMILY FRIENDLY\",\"FOOD\",\"NIGHTLIFE\",\"OUTDOORS&RECREATION\",\"PROFESSIONAL&OTHER\",\"RESIDENCE\",\"SHOP&SERVICE\",\"TRAVEL&TRANSPORT\",\"MISCELLANOUS\"]`\n",
                        "schema": {
                            "$ref": "#/definitions/result"
                        }
                    },
                    "400": {
                        "description": "You can get \"invalid app key\" message\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "Internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tray": {
            "post": {
                "tags": [
                    "WishList API - REST API"
                ],
                "summary": "Perform action on the Wish List",
                "description": "(Additions to what is described above), depending on the action chosen (`add_tray_element`, `update_tray_element`, `get_tray_elements`, `login_tray`, `empty_tray`, `get_tray_elements_in_details`) the following json elements should be submitted.\nFor `action` = `add_tray_element`, following lists properties are required (should be provided):\n  - **Required properties**: `action`, `key`, `element_id`, `element_type`, `element_title`, `image_url`,  `token`, `source`\n\nFor `action` = `update_tray_element`, following lists properties are either required (should be provided) or optionals:\n  - **Required properties**: `action`, `key`, `element_id`, `element_type`, `element_title`, `token`, `source`\n  - **Optional properties**: `delete`, `attend`, `attend_datetime`, `rating`\n  \nFor `action` = `get_tray_elements`, following lists properties are either required (should be provided) or optionals:\n  - **Required properties**: `action`, `key`, `token`\n  - **Optional properties**: `offset`, `limit`, `order_type`, `show_past_events`\n\nFor `action` = `login_tray`, following lists properties are required (should be provided):\n  - **Required properties**: `action`, `key`, `junk_token`, `three_cixty_token`\n\nFor `action` = `empty_tray`, following lists properties are required (should be provided):\n  - **Required properties**: `action`, `key`, `token`\n\nFor `action` = `get_tray_elements_in_details`, following lists properties are either required (should be provided) or optionals:\n  - **Required properties**: `action`, `key`, `token`\n  - **Optional properties**: `offset`, `limit`, `order_type`, `show_past_events`, `language`\n\nHere, following is the description of the properties mentioned above\n  - `key` has the value which is the `3cixty App Key` of the application.\n  - `token` has the value which is either a `3cixty access_token` or a `junk token`. If a junk token is provided the item will not appear in any specific user *Wish List*. It is only when the user signs in to the `3cixty` Platform the item is associated to the user. \n  - `element_type` has the value which is either `POI` or `Event`.\n  - `attend_datetime` has the value which is a string with template `dd-MM-yyyy HH:mm`, for example `08-09-2014 10:00`.\n  - `order_type` has the value which is either `Asc` or `Desc` with the default value being `Desc`. The *Wish List* items are ordered based on the time they were entered in the *Wish List*.\n  - `language` has the value which is either `en`, `it`, `en-EN`, `it-IT` with the default value being `en`.\n  - `attend` is a boolean that signifies if the item was visited or not.\n  - `show_past_events` is a boolean\n  - `offset` is a number with a default value of 0\n  - `limit` is a number with a default value of 100\n  - `junk_token` is a junk token in a string format.\n  - `three_cixty_token` has the value which is a `3cixty access_token`.\n  - `rating` is a value from 0 to 5 given to the item.\n  - `element_id` is the id of the item.\n  - `image_url` url of the image of the item.\n  - `element_title` title of the item.\n  - `delete` whether to delete the item or not.\n  \nSample `json` object\n  ```json\n  {\n    \"key\":\"<key>\", \n    \"token\":\"<token>\", \n    \"action\": \"update_tray_element\", \n    \"element_id\": \"http://data.linkedevents.org/event/c78b678b-c51a-458f-8137-7f35abda121d\",\n    \"element_type\": \"Event\", \n    \"source\": \"ExlorationApp+1.0\", \n    \"delete\": \"true\"\n  }\n  ```\n  \nFor `action`: `add_tray_element`, `update_tray_element` and `empty_tray` the returns HTTP response is a `JSON` that is of the format `{\"response\": \"OK\"}`\n\nFor `action`: `get_tray_element`, `login_tray` the returns HTTP response is a `JSON` that is of the format \n```json\n  [\n    { \n      \"element_id\": \"ID_00001\",\n      \"element_type\": \"events\",\n      \"element_title\": \"Title 00001\", \n      \"timestamp\": 122454544574, \n      \"token\": \"junk00001\", \n      \"source\": \"Exploration\", \n      \"attend\": false, \n      \"attend_datetime\": \"08-12-2014 10:00\", \n      \"rating\": -1, \n      \"image_url\": \n      \"dumb link1\" \n    }\n  ]\n  ```\n\nFor `action`: `get_tray_elements_in_details` the returns HTTP response is a `JSON` that is of the format \n```json\n [\n  { \n    \"type\": \"Event\",\n    \"address\": \"<address>\",\n    \"image_url\": \"<imageURL>\",\n    \"locality\": \"<locality>\",\n    \"name\": \"<name>\",\n    \"description\": \"<description>\",\n  \t\"lon\": \"<longitude>\",\n  \t\"time_end\": \"<timeEventEnds>\",\n  \t\"source\": \"<sourceURL>\",\n  \t\"id\": \"<ID>\",\n  \t\"category\": \"<category>\",\n  \t\"time_beginning\": \"<StartingTimeOfEvent>\",\n  \t\"lat\": \"<latitude>\",\n  \t\"translation\": true,\n    \"url\": \"<EventURL>\",\n    \"creationTimestamp\": 0,\n    \"rating\": -1,\n    \"attend_datetime\": \"<attendDatetime>\"\n   },\n   {  \n    \"type\": \"POI\",\n    \"aggregate_rating\": 0,\n    \"reviews\": [  \"<review1>\" ],\n    \"reviewTranslations\": [true],\n    \"image_url\": \"<imageURL>\",\n    \"name\": \"<name>\",\n    \"description\": \"<description>\",\n    \"telephone\": \"<telephoneNumber>\",\n    \"lon\": \"<longitude>\",\n    \"source\": \"<sourceURL>\",\n  \t\"id\": \"<ID>\",\n    \"review_counts\": 1,\n    \"lat\": \"<latitude>\",\n  \t\"translation\": true,\n    \"url\": \"<POIURL>\",\n    \"creationTimestamp\": 0,\n    \"rating\": -1,\n    \"attend_datetime\": \"<attendDatetime>\"\n     }\n  ]\n  ```\nJava code to call the api\n  \n<pre class=\"brush: java\">\n  URL url = new URL(\"&lt;API&gt;\"));\n  URLConnection urlConn = url.openConnection();\n  ((HttpURLConnection) urlConn).setRequestMethod(\"POST\");\n  String jsonString=\"&lt;json&gt;\";\n  OutputStreamWriter writer = new OutputStreamWriter(urlConn.getOutputStream());\n  writer.write(jsonString.getBytes(UTF8));\n  InputStream input = urlConn.getInputStream();\n  StringBuffer buffer = new StringBuffer();\n  byte[] b = new byte[1024];\n  int readBytes = 0;\n  while (true) { \n    readBytes = input.read(b);\n    if (readBytes &lt; 0) break;\n    buffer.append(new String(b, 0, readBytes));\n  }\n  input.close();\n  JSONObject json = new JSONObject(buffer.toString());\n  if (json.getString(\"response\").equals(\"successful\")) {\n    System.out.println(\"Successful\");\n  } else {\n    System.out.println(\"Failed\");\n  }\n  </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "wishlistPayload",
                        "in": "body",
                        "description": "Payload to be defined based on the above description.\n",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "action",
                                "key"
                            ],
                            "properties": {
                                "action": {
                                    "type": "string",
                                    "description": "valid list of actions is `add_tray_element`, `update_tray_element`,`get_tray_elements`, `login_tray`, `empty_tray`, `get_tray_elements_in_details`. You should chose one of the following. This is a required field.\n",
                                    "enum": [
                                        "add_tray_element",
                                        "update_tray_element",
                                        "get_tray_elements",
                                        "login_tray",
                                        "empty_tray",
                                        "get_tray_elements_in_details"
                                    ]
                                },
                                "key": {
                                    "type": "string",
                                    "description": "`3cixty App key`. This is a required field.\n"
                                },
                                "element_id": {
                                    "type": "string",
                                    "description": "id of the item\n"
                                },
                                "element_type": {
                                    "type": "string",
                                    "description": "`element_type` has the value which is either `POI` or `Event`.\n",
                                    "enum": [
                                        "Event",
                                        "POI"
                                    ]
                                },
                                "element_title": {
                                    "type": "string",
                                    "description": "title of the item\n"
                                },
                                "image_url": {
                                    "type": "string",
                                    "description": "url of the image of the item\n"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "has the value which is either a `3cixty access_token` or a `junk token`. If a junk token is provided the item will not appear in any specific user *Wish List*. It is only when the user signs in to the `3cixty` Platform the item is associated to the user. \n"
                                },
                                "source": {
                                    "type": "string",
                                    "description": "source from where the element was gathered\n"
                                },
                                "delete": {
                                    "type": "string",
                                    "description": "whether the item was delete the item or not\n",
                                    "enum": [
                                        "true",
                                        "false"
                                    ]
                                },
                                "attend": {
                                    "type": "boolean",
                                    "description": "whether item was attended/visited or not\n"
                                },
                                "attend_datetime": {
                                    "type": "string",
                                    "description": "has the value which is a string with template `dd-MM-yyyy HH:mm`, for example `08-09-2014 10:00`\n"
                                },
                                "rating": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 5,
                                    "description": "`rating` from 0 to 5 given to the item\n"
                                },
                                "offset": {
                                    "type": "integer",
                                    "default": 0,
                                    "description": "offset\n"
                                },
                                "limit": {
                                    "type": "integer",
                                    "default": 100,
                                    "description": "limit of items\n"
                                },
                                "order_type": {
                                    "type": "string",
                                    "description": "has the value which is either `Asc` or `Desc` with the default value being `Desc`. The *Wish List* items are ordered based on the time they were entered in the *Wish List*.\n",
                                    "default": "Desc",
                                    "enum": [
                                        "Asc",
                                        "Desc"
                                    ]
                                },
                                "show_past_events": {
                                    "type": "boolean",
                                    "description": "is a boolean\n"
                                },
                                "junk_token": {
                                    "type": "string",
                                    "description": "is a junk token in a string format.\n"
                                },
                                "three_cixty_token": {
                                    "type": "string",
                                    "description": "has the value which is a `3cixty access_token`. \n"
                                },
                                "language": {
                                    "type": "string",
                                    "description": "has the value which is either `en`, `it`, `en-EN`, `it-IT` with the default value being `en`.\n",
                                    "default": "en",
                                    "enum": [
                                        "en",
                                        "it",
                                        "en-EN",
                                        "it-IT"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "depending on the`action` returns HTTP response with a `JSON` that is either `{\"response\": \"OK\"}` or `[{ \"element_id\": \"ID_00001\", \"element_type\": \"events\", \"element_title\": \"Title 00001\", \"timestamp\": 122454544574, \"token\": \"junk00001\", \"source\": \"Exploration\", \"attend\": false, \"attend_datetime\": \"08-12-2014 10:00\", \"rating\": -1, \"image_url\": \n  \"dumb link1\" }]` or `[ { \"type\": \"Event\", \"address\": \"<address>\", \"image_url\": \"<imageURL>\", \"locality\": \"<locality>\", \"name\": \"<name>\", \"description\": \"<description>\", \"lon\": \"<longitude>\", \"time_end\": \"<timeEventEnds>\", \"source\": \"<sourceURL>\", \"id\": \"<ID>\", \"category\": \"<category>\", \"time_beginning\": \"<StartingTimeOfEvent>\", \"lat\": \"<latitude>\", \"translation\": true, \"url\": \"<EventURL>\", \"creationTimestamp\": 0, \"rating\": -1, \"attend_datetime\": \"<attendDatetime>\" }, { \"type\": \"POI\", \"aggregate_rating\": 0, \"reviews\": [  \"<review1>\" ], \"reviewTranslations\": [true],  \"image_url\": \"<imageURL>\", \"name\": \"<name>\", \"description\": \"<description>\", \"telephone\": \"<telephoneNumber>\", \"lon\": \"<longitude>\", \"source\": \"<sourceURL>\", \"id\": \"<ID>\",  \"review_counts\": 1, \"lat\": \"<latitude>\", \"translation\": true,  \"url\": \"<POIURL>\", \"creationTimestamp\": 0, \"rating\": -1, \"attend_datetime\": \"<attendDatetime>\" } ]`\n",
                        "schema": {
                            "type": "object",
                            "description": "depending on the `action`, `JSON` object is returned.\n"
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate HTTP status code with a message is returned. Some example of returned messages are:\n - Invalid parameters\n - Invalid parameters or duplicated tray items\n - Failed to understand your tray request\n - The key is invalid\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "forbidden\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reporting": {
            "post": {
                "tags": [
                    "Feedback API - REST API"
                ],
                "summary": "Send feedback",
                "description": "This API helps developers to send user feedback to `3cixty` Platform. This API can be used by mobile clients to report user feedback from within the apps. The feedbacks are stored on the platform for later retrieval by the person in charge or analysing the issues.\n  \nThis API requires a `JSON` input of the following format\n```json\n  {\n    \"clientTimeStamp\": \"<clientTimeStamp>\",\n    \"clientVersion\": \"<clientVersion>\",\n    \"reason\": \"<reason>\",\n    \"userToken\": \"<userToken>\",\n    \"key\": \"<Appkey>\",\n    \"otherReasonText\": \"<otherReasonText>\",\n    \"lastPage\": \"<lastPage>\", \n    \"lastElement\": \"<lastElement>\", \n    \"lastPosition\": \"<lastPosition>\"\n  }\n  ```\nHere:\n\n  - `clientTimeStamp`: This is a **required** parameter. It is `xsd:dateTime`, with timeZone, for example: \"2002-10-10T12:00:00-05:00\".\n  - `clientVersion`: This is a **required** parameter. It is a string, for example \"Android-1.4\". \n  - `reason`: This is a **required** parameter. It is a string that can be: \n      - `WRONG_DATA`: in case the user presses the GUI button to report that the event/POI data he's looking at on the screen looks wrong. For example: item title is empty/null.\n      - `CRASH`: user wants to report a crash happened on the mobile app.\n      - `LOGIN`: user has problems to login with his account.\n      - `OTHER`: used to report any other feedback, detailed using a free-text box on the GUI. If `OTHER` is selected, then `otherReasonText` should also be provided and `otherReasonText` cannot be null.\n  - `otherReasonText`: it is a string that specifies a reason not listed by WRONG_DATA, CRASH or LOGIN. Sample `<otherReasonText>` is \"the map view does not work!!!\".\n  - `userToken`: it is the `3cixty access_token`. Either `userToken` or `key` should be specified.\n  - `key`: it is the `3cixty App Key`. Either `userToken` or `key` should be specified.\n  - `lastPage`: is class of the last app view used. It is a string. for example \"`com.3cixty.client.NavigationPage`\".\n  - `lastElement`: is the ID of the Event or the POI the user was looking at. It is a string.\n  - `lastPosition`: is the position (lat, lon in `WGS84`, double) and accuracy (in meters, double) of the user's last position. For example [45.477760, 9.234779,3000].\n\n  \n  Below is the sample `Json` object\n  \n  ```JSON\n    {\n      \"clientTimeStamp\": \"2002-10-10T12:00:00-05:00\",\n      \"clientVersion\": \"Android-1.4\", \n      \"reason\": \"WRONG_DATA\", \n      \"userToken\": \"1234xyz\", \n      \"lastPage\": \"com.3cixty.client.NavigationPage\", \n      \"lastElement\": \"xyz568568\", \n      \"lastPosition\": [45.477760, 9.234779,3000] \n    }\n  ```\n  \n  Below is the Java code to call the API\n  \n  <pre class=\"brush: java\">\n  URL url = new URL(\"&lt;API&gt;\"));\n  URLConnection urlConn = url.openConnection();\n  ((HttpURLConnection) urlConn).setRequestMethod(\"POST\");\n  String jsonString=\"&lt;json&gt;\";\n  OutputStreamWriter writer = new OutputStreamWriter(urlConn.getOutputStream());\n  writer.write(jsonString.getBytes(UTF8));\n  InputStream input = urlConn.getInputStream();\n  StringBuffer buffer = new StringBuffer();\n  byte[] b = new byte[1024];\n  int readBytes = 0;\n  while (true) { \n    readBytes = input.read(b);\n    if (readBytes &lt; 0) break;\n    buffer.append(new String(b, 0, readBytes));\n  }\n  input.close();\n  ...\n  </pre>\n",
                "produces": [
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "feedbackPayload",
                        "in": "body",
                        "description": "Payload to be defined based on the above description.\n",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "clientTimeStamp",
                                "clientVersion",
                                "reason"
                            ],
                            "properties": {
                                "clientTimeStamp": {
                                    "type": "string",
                                    "description": "It is `xsd:dateTime`, with timeZone, for example: \"2002-10-10T12:00:00-05:00\"\n"
                                },
                                "clientVersion": {
                                    "type": "string",
                                    "description": "It is a string, for example \"Android-1.4\".\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "It is a string that can be: \n - `WRONG_DATA`: in case the user presses the GUI button to report that the event/POI data he's looking at on the screen looks wrong. For example: item title is empty/null.\n - `CRASH`: user wants to report a crash happened on the mobile app.\n - `LOGIN`: user has problems to login with his account.\n - `OTHER`: used to report any other feedback, detailed using a free-text box on the GUI. If `OTHER` is selected, then `otherReasonText` should also be provided and `otherReasonText` cannot be null.\n"
                                },
                                "userToken": {
                                    "type": "string",
                                    "description": "it is the `3cixty access_token`. Either `userToken` or `key` should be specified.\n"
                                },
                                "key": {
                                    "type": "string",
                                    "description": "it is the `3cixty App Key`. Either `userToken` or `key` should be specified.\n"
                                },
                                "otherReasonText": {
                                    "type": "string",
                                    "description": "it is a string that specifies a reason not listed by WRONG_DATA, CRASH or LOGIN. Sample `<otherReasonText>` is \"the map view does not work!!!\".\n"
                                },
                                "lastPage": {
                                    "type": "string",
                                    "description": "is class of the last app view used. It is a string. for example \"`com.3cixty.client.NavigationPage`\".\n"
                                },
                                "lastElement": {
                                    "type": "string",
                                    "description": "is the ID of the Event or the POI the user was looking at. It is a string.\n",
                                    "enum": [
                                        "POI",
                                        "Event"
                                    ]
                                },
                                "lastPosition": {
                                    "type": "array",
                                    "maxItems": 3,
                                    "description": "is the position (lat, lon in `WGS84`, double) & accuracy (in meters, double) of the user's last position. For example [45.477760, 9.234779,3000].\n",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response with message \"Successful\".\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. Example of returned messages are:\n- Empty request - Your userToken is invalid - Your key is invalid - Your request must contain either userToken or key - Client version is required - Reason is required - Your report request must be in JSON format - Client timestamp is required - Client timestamp is invalid. The pattern looks like: 2002-10-10T12:00:00-05:00\"\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getMobidotAccount": {
            "get": {
                "tags": [
                    "MoveSmarterIntegration API - REST API"
                ],
                "summary": "Get MoveSmarter user account credentials",
                "description": "If there exists an account corresponding with a given `3cixty access_token`, the API will return the `MoveSmarter` account of the user; otherwise, the API tries to create a new account on MoveSmarter server. If this creation is successful, the API will return the new account; otherwise, the API return an empty `JSON` string `{}`\n\n  The return of the HTTP request is in `JSON` format is based on the `3cixty access_token` input:\n  For valid `3cixty access_token`: \n  - If there exists a `MoveSmarter` account, the return message follows the structure `{\"username\": \"<username>\", \"password\": \"<password>\"}` with the `HTTP code status = 200`.\n  - if there does not exists a `MoveSmarter` account, the API tries to create the account.\n    - on a successful creation `{\"username\": \"<username>\", \"password\": \"<password>\"}` is returned with `HTTP code status = 200`.\n    - If an error occurs the return message is `{}`.\n  \n  For Invalid `3cixty access_token`: `HTTP status code = 400` is returned with message `The access token is invalid`.\n\n  Java code to call the api\n  \n  <pre class=\"brush: java\">\n  URL url = new URL(\"&lt;API&gt;\");\n  HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n  con.setRequestMethod(\"GET\");\n  con.setRequestProperty(\"access_token\", &lt;ThreeCixtyAccessToken&gt;);\n  InputStream input = con.getInputStream();\n  StringBuffer buffer = new StringBuffer();\n  byte[] b = new byte[1024];\n  int readBytes = 0;\n  while (true) { \n    readBytes = input.read(b);\n    if (readBytes &lt; 0) break;\n    buffer.append(new String(b, 0, readBytes));\n  }\n  input.close();\n  ...\n  </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in the following `JSON` format: `{\"username\": \"<username>\", \"password\": \"<password>\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "username"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "password"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. Some example of returned messages are:\n- The access token is invalid\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "On the failure `service unavailable` message is returned\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getMobidotToken": {
            "get": {
                "tags": [
                    "MoveSmarterIntegration API - REST API"
                ],
                "summary": "Get MoveSmarter one time use token for user",
                "description": "This API creates a `MoveSmarter` account if there doesn't exist before invoking it. If successful to get a token from `MoveSmarter` server, this API will return `MoveSmarter` token and expiration in a `JSON` format. If failed, this API will respond with `HTTP status code = 400` and relevant error message.\n\n The return of your HTTP request in `JSON` format is based on your `3cixty access_token` input:\n   \n For valid access_token:\n \n - If the API is able to get a `MoveSmarter` token, it will send back a `JSON` string like: \n         \n     ```json\n     {\n       \"timeLeft\": <timeleft>\n       \"token\": \"<token>\"\n     }\n     ```\n \n   Here:\n   - `timeLeft` is the remaining time where the corresponding `MoveSmarter` token is still valid. This value is in second.\n     Note that, the maximum timeLeft value is `7200`.\n     \n   - Otherwise, the API returns `HTTP status code = 400`.\n   \n For Invalid `3cixty access_token`: HTTP code status is 400 with message \"The access token is invalid\".\n\n Java code to call the api\n \n <pre class=\"brush: java\">\n   URL url = new URL(\"&lt;API&gt;\");\n   HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n   con.setRequestMethod(\"GET\");\n   con.setRequestProperty(\"access_token\",&lt;ThreeCixtyAccessToken&gt;);\n   InputStream input = con.getInputStream();\n   StringBuffer buffer = new StringBuffer();\n   byte[] b = new byte[1024];\n   int readBytes = 0;\n   while (true) { \n     readBytes = input.read(b);\n     if (readBytes &lt; 0) break;\n     buffer.append(new String(b, 0, readBytes));\n   }\n   input.close();\n   ...\n </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a JSON format like; `{ \"timeLeft\": <timeleft>, \"token\": \"<token>\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "description": "MoveSmarter server one time use token\n"
                                },
                                "timeleft": {
                                    "type": "integer",
                                    "description": "is the remaining time where the corresponding token is still valid. This value is in second.\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. Some example of returned messages are:\n- The access token is invalid\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/registerGoFlowApp": {
            "post": {
                "tags": [
                    "GoflowIntegration API - REST API"
                ],
                "summary": "Register an App on GoFlow server",
                "description": "**This API should not be used by App developers as this API is already referenced when you get a `3cixty App key`.**\n\nThe return of the HTTP request is in JSON format.\n- If the `HTTP status code = 400`, it means that the api failed to register your App.\n- If the `HTTP status code = 200`, it means that the api was successful to register your App.\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\");\n HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n con.setRequestMethod(\"POST\");\n con.setRequestProperty(\"google_access_token\", &lt;googleAccessToken&gt;);\n con.setRequestProperty(\"key\", &lt;ThreeCixtyAppKey&gt;);\n InputStream input = con.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) { \n    readBytes = input.read(b);\n    if (readBytes &lt; 0) break;\n    buffer.append(new String(b, 0, readBytes));\n }\n input.close();\n // check whether or not you are successful to register your App on GoFlow\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "google_access_token",
                        "in": "header",
                        "description": "A Google access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in the following `JSON` format `{\"response\": true}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "boolean",
                                    "description": "always true"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. The return is in the following `JSON` format `{\"response\": false, \"reason\": \"<message>\"}`. Some example of returned messages are:\n- Google access_token is invalid or expired\n- Cannot register your App on GoFlow server or your AppKey is invalid\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "boolean",
                                    "description": "always \"false\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message\n"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/createOrRetrieveGoFlowDeveloper": {
            "get": {
                "tags": [
                    "GoflowIntegration API - REST API"
                ],
                "summary": "Create or retrieve a GoFlow developer account credentials",
                "description": "This API is used to create or retrieve a `GoFlow` account for developers to communicate with `GoFlow` server.\nThe return of HTTP request is in the JSON format.\n\n - If the `HTTP status code = 400`, it means the provided `3cixty access_token` is invalid\n - If the `HTTP status code = 200`, it means either:\n   - If your response text is an empty `JSON` object (equal to `{}`), it means the API failed to create or retrieve `GoFlow` account associated with the provided `3cixty access_token`.\n   - Otherwise the response `JSON` is of the following format: `{\"username\": \"<username>\", \"password\": \"<password>\", \"appid\": \"<appid>\"}` where the values `<username>` and `<password>` are `GoFlow` account information associated with the provided `3cixty access_token` and `<appid>` is the associated app of the developer.\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\");\n HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n con.setRequestMethod(\"GET\");\n con.setRequestProperty(\"access_token\", &lt;ThreeCixtyAccessToken&gt;);\n InputStream input = con.getInputStream();\n StringBuffer buffer = new StringBuffer();\n  byte[] b = new byte[1024];\n  int readBytes = 0;\n  while (true) { \n     readBytes = input.read(b);\n     if (readBytes &lt; 0) break;\n     buffer.append(new String(b, 0, readBytes));\n  }\n  input.close();\n // check whether or not you are successful to create or retrieve GoFlow credentials\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in the following JSON format `{\"username\": \"<username>\", \"password\": \"<password>\", \"appid\": \"<appid>\" }`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "GoFlow username\n"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "GoFlow password\n"
                                },
                                "appid": {
                                    "type": "string",
                                    "description": "GoFlow appid\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message from the following is returned. The return is in following `JSON` format `{\"response\": false, \"reason\": \"<message>\"}`. Some example of returned messages are:\n - The access token is invalid\n - Cannot create user at GoFlow\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "boolean",
                                    "description": "always \"false\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message\n"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getGoflowAccount": {
            "get": {
                "tags": [
                    "GoflowIntegration API - REST API"
                ],
                "summary": "Create or retrieve a GoFlow user account credentials",
                "description": "This api is used to create or retrieve a `GoFlow` user account based on a `3cixty access_token.\nThe return of HTTP request is in the JSON format.\n\n - If the `HTTP status code = 400`, it means the provided `3cixty access_token` is invalid\n - If the `HTTP status code = 200`, it means either:\n   - If your response text is an empty `JSON` object (equal to `{}`), it means the API failed to create or retrieve `GoFlow` account associated with the provided `3cixty access_token`.\n   - Otherwise the response `JSON` is of the following format: `{\"username\": \"<username>\", \"password\": \"<password>\", \"appid\": \"<appid>\"}` where the values `<username>` and `<password>` are `GoFlow` account information associated with the provided `3cixty access_token` and `<appid>` is the associated app used by the user.\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\");\n HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n con.setRequestMethod(\"GET\");\n con.setRequestProperty(\"access_token\", &lt;ThreeCixtyAccessToken&gt;);\n InputStream input = con.getInputStream();\n StringBuffer buffer = new StringBuffer();\n  byte[] b = new byte[1024];\n  int readBytes = 0;\n  while (true) { \n     readBytes = input.read(b);\n     if (readBytes &lt; 0) break;\n     buffer.append(new String(b, 0, readBytes));\n  }\n  input.close();\n // check whether or not you are successful to retrieve GoFlow credentials\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in the following JSON format `{\"username\": \"<username>\", \"password\": \"<password>\", \"appid\": \"<appid>\" }`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "GoFlow username\n"
                                },
                                "password": {
                                    "type": "string",
                                    "description": "GoFlow password\n"
                                },
                                "appid": {
                                    "type": "string",
                                    "description": "GoFlow appid\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message from the following is returned. The return is in following `JSON` format `{\"response\": false, \"reason\": \"<message>\"}`. Some example of returned messages are:\n - The access token is invalid\n - Cannot create user at GoFlow\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "boolean",
                                    "description": "always \"false\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message\n"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getProfile": {
            "get": {
                "tags": [
                    "Profile API - REST API"
                ],
                "summary": "Get User Profile Information",
                "description": "The API is used to extract user personal information the is stored in the 3cixty Knowledgebase.\n \nThe return of request is in JSON format.\n - If the `HTTP status code = 200`, the response `JSON` is like `{\"uid\":\"<uid>\",\"firstName\":\"<firstName>\",\"lastName\":\"<lastName>\",\"latitude\":<latitude>,\"profileImage\":\"<ProfileimageURL>\",\"longitude\":<longitude>}`.\n - If the `HTTP status code = 400`, this could be due to permission denied by user or invalid `3cixty access_token`, etc. The return thus is either one of the following:\n    - You are not allowed to access the user profile.\n    - There is no information of your profile in the KB.\n    - The access token is invalid.\n\nJava code to call the api\n<pre class=\"brush: java\">\n   URL url = new URL(\"&lt;API&gt;\"));\n   URLConnection urlConn = url.openConnection();\n   urlConn.setRequestProperty(\"access_token\", &lt;ThreeCixtyAccessToken&gt;);\n   ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n   InputStream input = urlConn.getInputStream();\n   StringBuffer buffer = new StringBuffer();\n   byte[] b = new byte[1024];\n   int readBytes = 0;\n   while (true) { \n     readBytes = input.read(b);\n     if (readBytes &lt; 0) break;\n     buffer.append(new String(b, 0, readBytes));\n   }\n   input.close();\n   JSONObject json = new JSONObject(buffer.toString());\n   </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a JSON format like `{\"uid\":\"<uid>\",\"firstName\":\"<firstName>\",\"lastName\":\"<lastName>\",\"latitude\":<latitude>,\"profileImage\":\"<ProfileimageURL>\",\"longitude\":<longitude>}`.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "description": "user's 3cixty ID\n"
                                },
                                "firstName": {
                                    "type": "string",
                                    "description": "user's first Name\n"
                                },
                                "lastName": {
                                    "type": "string",
                                    "description": "user's last Name\n"
                                },
                                "latitude": {
                                    "type": "number",
                                    "description": "latitude\n"
                                },
                                "profileImage": {
                                    "type": "string",
                                    "description": "user's profile image\n"
                                },
                                "longitude": {
                                    "type": "number",
                                    "description": "longitude\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message from the following is returned. Some example of returned messages are:\n - You are not allowed to access the user profile\n - There is no information of your profile in the KB\n - The access token is invalid\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getUID": {
            "get": {
                "tags": [
                    "Profile API - REST API"
                ],
                "summary": "Get the UserID from the 3cixty access_token",
                "description": "The API is used to get 3cixty UID of the user from the `3cixty access_token`. \nThe return of your HTTP request is in `JSON` format.\n- If the `HTTP status code = 200` the response text is: `{\"uid\":\"<uid>\"}`.\n- If the `HTTP status code = 400`, the return is following:\n  - The access token is invalid\n\nJava code to call the api\n<pre class=\"brush: java\">\n   URL url = new URL(\"&lt;API&gt;\"));\n   URLConnection urlConn = url.openConnection();\n   urlConn.setRequestProperty(\"access_token\", &lt;ThreeCixtyAccessToken&gt;);\n   ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n   InputStream input = urlConn.getInputStream();\n   StringBuffer buffer = new StringBuffer();\n   byte[] b = new byte[1024];\n   int readBytes = 0;\n   while (true) { \n     readBytes = input.read(b);\n     if (readBytes &lt; 0) break;\n     buffer.append(new String(b, 0, readBytes));\n   }\n   input.close();\n   JSONObject json = new JSONObject(buffer.toString());\n </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a JSON format `{\"uid\":\"<uid>\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uid": {
                                    "type": "string",
                                    "description": "user's 3cixty ID\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "If the HTTP status code response is 400, the return is following:\n - The access token is invalid\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getAppKey": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Get/generate 3cixty App key",
                "description": "This API is used to get `3cixty App key` by the developers. \n\nLet us now describe the parameters required:\n - `google_access_token`: Your `Google access_token`. You might get a `Google access_token` by calling the `3cixty` Google token endpoint.\n - `appid`: Your application identity. This value must be unique within the `3cixty` Platform. Typically, an appid could be a name like `com.sample.foo` or just anything (without any fullstops).\n - `appname`: Your application name, for example `3cixty Test App`.\n - `category`: Your application category. You might use one of the following values: `Exploration`, `MobileGuide`, and `AppChallenge`. For App Challenge developers, you should use the AppChallenge category for yours.\n - `description`: Your application description to explain about what your application does. \n - `redirect_uri`: A redirect uri for web applications. \n - `thumbNailUrl`: A logo link for web applications. This logo is used to show permission question to your users when your web application asks your users to grant permission to access to his private data. This value is not required for Android applications, but mandatory for Web applications.\n\nThe return of your HTTP request is in `JSON` format. If you are successful to get an app key, the 3cixty Platform will respond a message with the content as `{\"key\": \"<ThreeCixtyAppKey>\"}`; otherwise, you will receive 400 for HTTP status code and a text also the following `JSON` format `{\"response\": \"failed\", \"reason\": \"<reason>\"}` explaining you about errors.\n\nError reasons returned are:\n - AppId already existed or scopeName doesn't exist\n - Google access token is invalid or expired\n - appId only contains characters in the following patterns ^[a-z_A-Z0-9:\\\\-]*\n - Cannot register App on GoFlow server\n - appId already existed or scopeName doesn't exist\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;?google_access_token\n =\"googleAccessToken\" + &amp;appid=\" + appid + \"&amp;appname=\" + \n URLEncoder.encode(appname, \"UTF-8\") + \"&amp;category=\" + \n URLEncoder.encode(cat, \"UTF-8\")+ \"&amp;scopeName=\" + URLEncoder\n .encode(scope, \"UTF-8\") + \"&amp;description=\" + URLEncoder.encode\n (desc, \"UTF-8\") + \"&amp;redirect_uri=\" + URLEncoder.encode\n (redirect_uri, \"UTF-8\") + \"&amp;thumbNailUrl=\" + URLEncoder.encode\n (thumbNailUrl, \"UTF-8\"));\n InputStream input = url.openConnection().getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n JSONObject json = new JSONObject(buffer.toString());\n if (json.has(\"key\")) {\n System.out.println(\"Your app secret is: \" + json.getString(\"key\"));\n } else {\n \tSystem.out.println(\"Failed to get app key: \" + json);\n }\n </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "google_access_token",
                        "in": "query",
                        "description": "A Google access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appid",
                        "in": "query",
                        "description": "Your application identity. This value must be unique within the `3cixty` Platform. Typically, an appid could be a name like `com.sample.foo` or just anything (without any fullstops).\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appname",
                        "in": "query",
                        "description": "Your application name, for example `3cixty Test App`.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Your application category. You might use one of the following values: `Exploration`, `MobileGuide`, and `AppChallenge`. For App Challenge developers, you should use the AppChallenge category for yours.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scopeName",
                        "in": "query",
                        "description": "List of 3cixty scopes requested by the App. not use currently.\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Your application description to explain about what your application does. default value is \"\"\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "query",
                        "description": "A redirect uri for web applications.\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "thumbNailUrl",
                        "in": "query",
                        "description": "A logo link for web applications. This logo is used to show permission question to your users when your web application asks your users to grant permission to access to his private data. This value is not required for Android applications, but mandatory for Web applications.\n",
                        "default": "",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in the following `JSON` format `{\"key\": \"<ThreeCixtyAppKey>\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "description": "3cixty App Key\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. The return is in `JSON` format, for example `{\"response\": \"failed\", \"reason\": \"<message>\"}`. Some example of returned messages are:\n - AppId already existed or scopeName doesn't exist\n - Google access token is invalid or expired\n - appId only contains characters in the following patterns ^[a-z_A-Z0-9:\\\\-]*\n - Cannot register App on GoFlow server\n - appId already existed or scopeName doesn't exist\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"failed\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message\n"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/updateAppInfo": {
            "post": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Update 3cixty App key information",
                "description": "This API is to update information on the `3cixty` Platform related to the App. \n\nLet us now describe the parameters required\n - `google_access_token`: Your `Google acces_token`. You might get a `Google access_token` by calling the `3cixty` Google token endpoint.\n - `appid`: Your application identity. This value must be unique within the `3cixty` Platform. Typically, an appid could be a name like `com.sample.foo` or just anything (without any fullstops).\n - `appname`: Your application name, for example `3cixty Test App`.\n - `category`: Your application category. You might use one of the following values: `Exploration`, `MobileGuide`, and `AppChallenge`. For App Challenge developers, you should use the AppChallenge category for yours.\n - `description`: Your application description to explain about what your application does. \n - `redirect_uri`: A redirect uri for web applications. \n - `thumbNailUrl`: A logo link for web applications. This logo is used to show permission question to your users when your web application asks your users to grant permission to access to his private data. This value is not required for Android applications, but mandatory for Web applications.\n\nThe return of your HTTP request is in `JSON` format. If you are successful to update an app key, the 3cixty Platform will respond a message with the content as `{\"response\": \"Successful\"}`; otherwise, you will receive 400 for HTTP status code and a text also the following `JSON` format `{\"response\": \"failed\", \"reason\": \"<reason>\"}` explaining you about errors.\n\nError reasons returned are:\n - Google access token is invalid or expired\n - appId only contains characters in the following patterns ^[a-z_A-Z0-9:\\\\-]*\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;?google_access_token=\" + \n googleAccessToken+ \"&amp;appid=\" + appid + \"&amp;appname=\" + \n URLEncoder.encode(appname, \"UTF-8\") + \"&amp;category=\" + \n URLEncoder.encode(cat, \"UTF-8\") + \"&amp;scopeName=\" + URLEncoder\n .encode(scope, \"UTF-8\") + \"&amp;description=\" + URLEncoder.encode\n (desc, \"UTF-8\") + \"&amp;redirect_uri=\" + URLEncoder.encode\n (redirect_uri, \"UTF-8\") + \"&amp;thumbNailUrl=\" + URLEncoder.encode\n (thumbNailUrl, \"UTF-8\"));\n InputStream input = url.openConnection().getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n   if (readBytes &lt; 0) break;\n   buffer.append(new String(b, 0, readBytes));\n }\n input.close();\n       \n JSONObject json = new JSONObject(buffer.toString());\n if (json.has(\"response\")) {\n   if (json.getString(\"response\").equals(\"successful\")) {\n       System.out.println(\"Successful\");\n   } else {\n       System.out.println(\"Failed\");\n   }\n } else {\n \tSystem.out.println(\"Failed to update app key: \" + json);\n }\n </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "google_access_token",
                        "in": "formData",
                        "description": "A Google access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appid",
                        "in": "formData",
                        "description": "Your application identity. This value must be unique within the `3cixty` Platform. Typically, an appid could be a name like `com.sample.foo` or just anything (without any fullstops).\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appname",
                        "in": "formData",
                        "description": "Your application name, for example `3cixty Test App`.\n",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "category",
                        "in": "formData",
                        "description": "Your application category. You might use one of the following values: `Exploration`, `MobileGuide`, and `AppChallenge`. For App Challenge developers, you should use the AppChallenge category for yours.\n",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "scopeName",
                        "in": "formData",
                        "description": "List of 3cixty scopes requested by the App. not use currently.\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Your application description to explain about what your application does. default value is \"\"\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "formData",
                        "description": "A redirect uri for web applications.\n",
                        "default": "",
                        "type": "string"
                    },
                    {
                        "name": "thumbNailUrl",
                        "in": "formData",
                        "description": "A logo link for web applications. This logo is used to show permission question to your users when your web application asks your users to grant permission to access to his private data. This value is not required for Android applications, but mandatory for Web applications.\n",
                        "default": "",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a JSON format `{\"response\": \"Successful\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"Successful\"\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. The return is in `JSON` format, for example `{\"response\": \"failed\", \"reason\": \"<message>\"}`. Some example of returned messages are:\n - Google access token is invalid or expired\n - appId only contains characters in the following patterns ^[a-z_A-Z0-9:\\\\-]*\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"failed\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getAccessToken": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Get 3cixty access_token from Google access_token",
                "description": "This API is used to get `3cixty access_token` from `Google access_token`. **This API is only used by trusted `3cixty` apps**.\nLet us now describe the parameters required\n - `google_access_token`: Your `Google access_token`. You might get a `Google access_token` by calling the 3cixty Google token endpoint.\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the 3cixty Platform will respond a message like `{\"response\": \"<ThreeCixtyAccessToken>\"}` to you; otherwise, you will get an error message like `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\n \n Error reasons returned are:\n  - App key is invalid\n  - App key is not allowed to get access token\n  - Google access token is invalid or expired\n  - scope is invalid\n  - Internal errors\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\"));\n URLConnection urlConn = url.openConnection();\n urlConn.setRequestProperty(\"google_access_token\", &lt;googleAccessToken&gt;);\n urlConn.setRequestProperty(\"key\", &lt;ThreeCixtyAppKe&gt;);\n urlConn.setRequestProperty(\"scope\", &lt;scope&gt;);\n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n JSONObject json = new JSONObject(buffer.toString());\n // Get information about 3cixty token in the following json properties: access_token\n System.out.println(json.getString(\"access_token\"));\n </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "google_access_token",
                        "in": "header",
                        "description": "A Google access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "header",
                        "description": "list of 3cixty scopes in a comma separated syntax.\n",
                        "type": "string",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a `JSON` format like `{\"response\": \"<ThreeCixtyAccessToken>\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "3cixty access_token\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. You will get an error message like `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\nError reasons returned are:\n - App key is invalid\n - App key is not allowed to get access token\n - Google access token is invalid or expired\n - scope is invalid\n - Internal errors\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"failed\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message\n"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getAccessTokenForFB": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Get 3cixty access_token from Facebook Access token",
                "description": "This API is used to get `3cixty access_token` from `Facebook access_token`. **This API is only used by trusted `3cixty` apps**.\nLet us now describe some of the parameters:\n - `fb_access_token`: your `Facebook access_token`. This is a required Parameter\n - `width` of profile Image requested from Facebook. This is a optional parameter\n - `height` of profile Image requested from Facebook. This is a optional parameter\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the 3cixty Platform will respond a message like `{\"response\": \"<ThreeCixtyAccessToken>\"}` to you; otherwise, you will get an error message like `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\n \n Error reasons returned are:\n \n   - App key is invalid\n   - App key is not allowed to get access token\n   - Facebook access token is invalid or expired\n   - scope is invalid\n   - Internal errors\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\"));\n URLConnection urlConn = url.openConnection();\n urlConn.setRequestProperty(\"fb_access_token\", &lt;facebookAccessToken&gt;);\n urlConn.setRequestProperty(\"key\", &lt;ThreeCixtyAppKey&gt;);\n urlConn.setRequestProperty(\"scope\", &lt;scope&gt;);\n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n JSONObject json = new JSONObject(buffer.toString());\n // Get information about 3cixty token in the following json properties: access_token\n System.out.println(json.getString(\"access_token\"));\n </pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fb_access_token",
                        "in": "header",
                        "description": "A Facebook access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "in": "header",
                        "description": "list of 3cixty scopes in a comma separated syntax.\n",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "width of profile image.\n",
                        "type": "string",
                        "default": "50"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "height of profile image.\n",
                        "type": "string",
                        "default": "50"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a `JSON` format like `{\"response\": \"<ThreeCixtyAccesstoken\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "3cixty access_token\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. You will get an error message like `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\nError reasons returned are:\n - App key is invalid\n - App key is not allowed to get access token\n - Facebook access token is invalid or expired\n - scope is invalid\n - Internal errors\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"failed\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message\n"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/validateAccessToken": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Validate 3cixty access_token",
                "description": "Verify a `3cixty access_token`. This can be used to know if a developer needs to refresh the `3cixty access_token`.\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the `3cixty` Platform will respond a message like `{\"response\": \"ok\"}` to you ; otherwise, you will get an error message like `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\n\nError reasons returned are:\n - Access Token is invalid\n - App key is invalid\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\"));\n URLConnection urlConn = url.openConnection();\n urlConn.setRequestProperty(\"access_token\", &lt;ThreeCixtyAccessToken&gt;);\n urlConn.setRequestProperty(\"key\", &lt;ThreeCixtyAppKey&gt;);\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n JSONObject json = new JSONObject(buffer.toString());\n if (json.has(\"response\")) {\n if (json.getString(\"response\").equals(\"ok\")) {\n     System.out.println(\"the given access token is valid\");\n } else {\n     System.out.println(\"the given access token is invalid\");\n }\n } else {\n \tSystem.out.println(\"Error\");\n }\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty App key.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a JSON format like `{\"response\": \"ok\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"oK\""
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. You will get an error message like `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\nError reasons returned are:\n - Access Token is invalid\n - App key is invalid\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getApps": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Get all 3cixty apps associated to Google Access token",
                "description": "This API is used to get apps attached to a given `Google access_token` in the `3cixty` Platform.\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the `3cixty` Platform will respond a message as shown below to you; otherwise, you will get an error message, for example `{\"response\": \"failed\", \"reason\": \"<reson>\"}`.\n\nError reasons returned are:\n- Google access token is invalid or expired\n\nReturns for `format=json`:\n```json\n [{\"key\": \"<Appkey>\", \"id\": \"<Appid>\", \"name\": \"<nameoftheapp>\", \"description\": \"<description>\", \"scopes\": \"<scopes>\", \"redirect_uri\": \"<redirect-url>\", \"logo\": \"<applogo>\"}]\n```\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\" + \"google_access_token=\" + \n URLEncoder.encode(googleAccessToken, \"UTF-8\") + \"&amp;format=\" + \n URLEncoder.encode(format, \"UTF-8\")\n );\n URLConnection urlConn = url.openConnection();\n \n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n \n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n \n JSONObject json = new JSONObject(buffer.toString());\n // Get information about Apps:\n ...\n</pre>\n",
                "produces": [
                    "application/json",
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "google_access_token",
                        "in": "query",
                        "description": "A Google access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "requested return format. Currently supported values are `JSON` and `HTML`.\n",
                        "default": "json",
                        "enum": [
                            "json",
                            "html"
                        ],
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a JSON format as bellow: \n  `[{\"key\": \"<Appkey>\", \"id\": \"<Appid>\", \"name\": \"<nameoftheapp>\", \"description\": \"<description>\", \"scopes\": \"<scopes>\", \"redirect_uri\": \"<redirect-url>\", \"logo\": \"<applogo>\"}]`\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. You will get an error message of type `{\"response\": \"failed\", \"reason\": \"<reason>\"}`. Error reasons returned are:\n - Google access token is invalid or expired\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/retrieveAppKey": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Get 3cixty App Key from Google Access token",
                "description": "This API is used to retrieve `3cixty App Key` from `Google access_token` in the `3cixty` Platform.\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the `3cixty` Platform will respond a message as `{\"key\": \"<ThreeCixtyAppkey>\"}` to you; otherwise, you will get an error message of the format: `{\"response\": \"failed\", \"reason\": \"<reson>\"}`.\n\nError reasons returned are:\n - Google access token is invalid or expired\n - appid doesn't exit\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\" + \"google_access_token=\" + \n URLEncoder.encode(googleAccessToken, \"UTF-8\")+ \"&amp;appid=\" + \n URLEncoder.encode(appid, \"UTF-8\") );\n URLConnection urlConn = url.openConnection();\n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n JSONObject json = new JSONObject(buffer.toString());\n // Get key in the following json properties:    \n System.out.println(json.getString(\"key\"));\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "google_access_token",
                        "in": "query",
                        "description": "A Google access_token.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "appid",
                        "in": "query",
                        "description": "id of the app for which the `3cixty App Key` is requested.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The return of your `HTTP` request is in `JSON` format. If the validation is successful, the `3cixty` Platform will respond a message as `{\"key\": \"<ThreeCixtyAppkey>\"}` to you.\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "description": "3cixty App key\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message from the following is returned. You will get an error message, for example `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\nError reasons returned are:\n - Google access token is invalid or expired\n - appid doesn't exit\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/retrieveKeyInfo": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Get 3cixty App key info",
                "description": "This API is used to retrieve `3cixty App Key` information from a `3cixty App key`.\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the `3cixty` Platform will respond a message as `{\"response\": \"found\", \"appid\":\"<appID>\", \"appname\": \"<AppName>\"}` to you; otherwise, you will get an error message of the format `{\"response\": \"<reason>\"}`.\n\nError reasons returned are:\n - not found\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;AP&gt;\");\n URLConnection urlConn = url.openConnection();\n urlConn.setRequestProperty(\"key\",&lt;ThreeCixtyAppke&gt;);\n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n JSONObject json = new JSONObject(buffer.toString());\n // Get key in the following json properties:    \n System.out.println(json.getString(\"key\"));\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "header",
                        "description": "A 3cixty app key.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The return of your HTTP request is in JSON format. If the validation is successful, the 3cixty Platform will respond a message as `{\"response\": \"found\", \"appid\":\"<appID>\", \"appname\": \"<AppName>\"}` to you\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"found\"\n"
                                },
                                "appid": {
                                    "type": "string",
                                    "description": "app id associated with the key\n"
                                },
                                "appname": {
                                    "type": "string",
                                    "description": "app name associated with the key\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message from the following is returned. You will get an error message, for example `{\"response\": \"<reason>\"}`.\nError reasons returned are:\n - not found\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/retrieveKeyInfoFromAccessToken": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Get 3cixty App key info from 3cixty access_token",
                "description": "This API is used to retrieve `3cixty App Key` information from a `3cixty access_token`.\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the `3cixty` Platform will respond a message as `{\"response\": \"found\", \"appid\":\"<appID>\", \"appname\": \"<AppName>\"}` to you; otherwise, you will get an error message of the format `{\"response\": \"<reason>\"}`.\n\nError reasons returned are:\n - not found\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\");\n URLConnection urlConn = url.openConnection();\n urlConn.setRequestProperty(\"access_token\", &lt;ThreeCixtyAccessToken&gt;);\n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n JSONObject json = new JSONObject(buffer.toString());\n ...\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The return of your HTTP request is in JSON format. If the validation is successful, the 3cixty Platform will respond a message as `{\"response\": \"found\", \"appid\":\"<appID>\", \"appname\": \"<AppName>\"}` to you\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"found\"\n"
                                },
                                "appid": {
                                    "type": "string",
                                    "description": "app id associated with the key\n"
                                },
                                "appname": {
                                    "type": "string",
                                    "description": "app name associated with the key\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. You will get an error message of the format `{\"response\": \"<reason>\"}`.\n\nError reasons returned are:\n - not found\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getScopes": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Get scopes defined in 3cixty Platform",
                "description": "This API is used to retrieve scopes available in the `3cixty`.\nThe return of your HTTP request is in `JSON` format as `[{\"scopeName\":\"<scope1>\",\"description\":\"Description for the scope\"},{\"scopeName\":\"<scope2>\",\"description\":\"Description for the scope\"}]` to you.\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\");\n URLConnection urlConn = url.openConnection();\n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n JSONObject json = new JSONObject(buffer.toString());\n ...\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The return of your HTTP request is in `JSON` format as `[{\"scopeName\":\"<scope1>\",\"description\":\"Description for the scope\"},{\"scopeName\":\"<scope2>\",\"description\":\"Description for the scope\"}]` to you.\n",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "scope": {
                                        "type": "string",
                                        "description": "scope Name\n"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "description for the scope\n"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/token": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Refresh a 3cixty access_token",
                "description": "This API is to refresh a `3cixty access_token` in the case where the current `3cixty access_token` is no longer valid because each `3cixty access_token` only lasts for a day. When you refresh a `3cixty access_token`, the `3cixty` Platform doesn't need to have interaction with users, so you can call this API through your code in Java or any other languages.\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the `3cixty` Platform will respond a message like `{\"access_token\": \"<ThreeCixtyAccessToken>\", \"refresh_token\": \"<ThreeCixtyRefreshToken>\", \"expires_in\": <number>, \"scope\": \"<Scopes>\"}` to you; otherwise, you will get an error message of the format `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\n \n Error reasons returned are:\n  - refresh token is invalid\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\"));\n URLConnection urlConn = url.openConnection();\n urlConn.setRequestProperty(\"refresh_token\", &lt;ThreeCixtyRefreshToken&gt;);\n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n // Get information about 3cixty token in the following json properties: access_token, refresh_token, expires_in and scope\n System.out.println(json.getString(\"access_token\"));\n ...\n\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "header",
                        "description": "A 3cixty refresh_token.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a JSON format  like `{\"access_token\": \"<ThreeCixtyAccessToken>\", \"refresh_token\": \"<ThreeCixtyRefreshToken>\", \"expires_in\": <number>, \"scope\": \"<Scopes>\"}``\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "access_token": {
                                    "type": "string",
                                    "description": "your 3cixty access_token\n"
                                },
                                "refresh_token": {
                                    "type": "string",
                                    "description": "your 3cixty refresh_token\n"
                                },
                                "expires_in": {
                                    "type": "number",
                                    "description": "time in secs left in the expiry of the access token\n"
                                },
                                "scope": {
                                    "type": "string",
                                    "description": "scopes associated.  \n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. You will get an error message of the format `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\nError reasons returned are:\n - refresh token is invalid\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"failed\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message\n"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/revoke": {
            "get": {
                "tags": [
                    "OAuth API - REST API"
                ],
                "summary": "Revoke a 3cixty access_token",
                "description": "This API is used to revoke a `3cixty access_token`.\n\nThe return of your HTTP request is in `JSON` format. If the validation is successful, the `3cixty` Platform will respond a message like `{\"response\": \"Successful\"}` to you; otherwise, you will get an error message like `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\n \n Error reasons returned are:\n  - an invalid access token or internal error\n\nJava code to call the api\n<pre class=\"brush: java\">\n URL url = new URL(\"&lt;API&gt;\"));\n URLConnection urlConn = url.openConnection();\n urlConn.setRequestProperty(\"access_token\", &lt;ThreeCixtyAccessToken&gt;);\n ((HttpURLConnection) urlConn).setRequestMethod(\"GET\");\n InputStream input = urlConn.getInputStream();\n StringBuffer buffer = new StringBuffer();\n byte[] b = new byte[1024];\n int readBytes = 0;\n while (true) {\n \treadBytes = input.read(b);\n \tif (readBytes &lt; 0) break;\n \tbuffer.append(new String(b, 0, readBytes));\n }\n input.close();\n // Get information about 3cixty token in the following json properties: access_token, refresh_token, expires_in and scope\n System.out.println(json.getString(\"access_token\"));\n ...\n\n</pre>\n",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "access_token",
                        "in": "header",
                        "description": "A 3cixty access_token.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns HTTP response in a JSON of the format `{\"response\": \"Successful\"}`\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "alwasys \"Suceessful\"\n"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "On the failure an appropriate message is returned. You will get an error message like `{\"response\": \"failed\", \"reason\": \"<reason>\"}`.\nError reasons returned are:\n - an invalid access token or internal error\n",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string",
                                    "description": "always \"failed\"\n"
                                },
                                "reason": {
                                    "type": "string",
                                    "description": "message"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "internal error\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "result": {
            "type": "object",
            "properties": {
                "distinct": {
                    "type": "boolean",
                    "description": "either \"true\" or \"false\"\n"
                },
                "ordered": {
                    "type": "boolean",
                    "description": "either \"true\" or \"false\"\n"
                },
                "bindings": {
                    "type": "array",
                    "description": "object\n",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "result2": {
            "type": "object",
            "properties": {
                "distinct": {
                    "type": "boolean",
                    "description": "either \"true\" or \"false\""
                },
                "ordered": {
                    "type": "boolean",
                    "description": "either \"true\" or \"false\""
                },
                "bindings": {
                    "type": "array",
                    "description": "array of properties in the the object depending on the query and the API. Place queries will have {\"editorial_score\", \"score\", \"venue\", \"title\", \"cell\", \"cellGeo\", \"editorial\", \"description\", \"img\", \"long\", \"lat\"} fields, event queries will have {\"url\", \"event\", \"datetimeBegin\", \"datetimeEnd\", \"title\", \"cell\", \"cellGeo\", \"description\", \"img\", \"long\", \"lat\", \"placeName\"} fields,  count apis will return {\"count\"} field",
                    "items": {
                        "type": "object",
                        "properties": {
                            "editorial_score": {
                                "type": "object",
                                "description": "editorial_score",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "score": {
                                "type": "object",
                                "description": "social score",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "venue": {
                                "type": "object",
                                "description": "venue id",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "string"
                                    }
                                }
                            },
                            "title": {
                                "type": "object",
                                "description": "title",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "cell": {
                                "type": "object",
                                "description": "cell",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "cellGeo": {
                                "type": "object",
                                "description": "cell Geo",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "editorial": {
                                "type": "object",
                                "description": "editorial value",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "description": {
                                "type": "object",
                                "description": "description",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "img": {
                                "type": "object",
                                "description": "image",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "long": {
                                "type": "object",
                                "description": "longitude",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "lat": {
                                "type": "object",
                                "description": "latitude",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "url": {
                                "type": "object",
                                "description": "event url",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "event": {
                                "type": "object",
                                "description": "event id",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "datetimeBegin": {
                                "type": "object",
                                "description": "datetime Begin",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "datetimeEnd": {
                                "type": "object",
                                "description": "datetime end",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "placeName": {
                                "type": "object",
                                "description": "latitude",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            },
                            "count": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "type"
                                    },
                                    "datatype": {
                                        "type": "string",
                                        "description": "uri"
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "integer"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "fullInfo": {
            "type": "object",
            "properties": {
                "Events": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "type": "string",
                                "description": "address"
                            },
                            "image_url": {
                                "type": "string",
                                "description": "image url"
                            },
                            "locality": {
                                "type": "string",
                                "description": "locality"
                            },
                            "name": {
                                "type": "string",
                                "description": "name"
                            },
                            "description": {
                                "type": "string",
                                "description": "description"
                            },
                            "lon": {
                                "type": "string",
                                "description": "longitude"
                            },
                            "time_end": {
                                "type": "string",
                                "description": "time event ends"
                            },
                            "source": {
                                "type": "string",
                                "description": "source of event"
                            },
                            "id": {
                                "type": "string",
                                "description": "id of event"
                            },
                            "category": {
                                "type": "string",
                                "description": "category of event"
                            },
                            "time_beginning": {
                                "type": "string",
                                "description": "time begining"
                            },
                            "lat": {
                                "type": "string",
                                "description": "latitude"
                            },
                            "translation": {
                                "type": "string",
                                "description": "translation true or false"
                            }
                        }
                    }
                },
                "POIs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "aggregate_rating": {
                                "type": "string",
                                "description": "aggregate_rating"
                            },
                            "address": {
                                "type": "string",
                                "description": "address"
                            },
                            "reviews": {
                                "type": "array",
                                "description": "reviews",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "reviewTranslations": {
                                "type": "array",
                                "description": "review translations",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "image_url": {
                                "type": "string",
                                "description": "image url"
                            },
                            "name": {
                                "type": "string",
                                "description": "name"
                            },
                            "telephone": {
                                "type": "string",
                                "description": "telephone"
                            },
                            "source": {
                                "type": "string",
                                "description": "source"
                            },
                            "id": {
                                "type": "string",
                                "description": "id of place"
                            },
                            "review_counts": {
                                "type": "string",
                                "description": "review counts"
                            },
                            "category": {
                                "type": "string",
                                "description": "category"
                            },
                            "translation": {
                                "type": "string",
                                "description": "translation true or false"
                            }
                        }
                    }
                }
            }
        },
        "Events": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "address"
                },
                "image_url": {
                    "type": "string",
                    "description": "image url"
                },
                "locality": {
                    "type": "string",
                    "description": "locality"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "description": {
                    "type": "string",
                    "description": "description"
                },
                "lon": {
                    "type": "string",
                    "description": "longitude"
                },
                "time_end": {
                    "type": "string",
                    "description": "time event ends"
                },
                "source": {
                    "type": "string",
                    "description": "source of event"
                },
                "id": {
                    "type": "string",
                    "description": "id of event"
                },
                "category": {
                    "type": "string",
                    "description": "category of event"
                },
                "time_beginning": {
                    "type": "string",
                    "description": "time begining"
                },
                "lat": {
                    "type": "string",
                    "description": "latitude"
                },
                "translation": {
                    "type": "string",
                    "description": "translation true or false"
                }
            }
        },
        "POIs": {
            "type": "object",
            "properties": {
                "aggregate_rating": {
                    "type": "string",
                    "description": "aggregate_rating"
                },
                "address": {
                    "type": "string",
                    "description": "address"
                },
                "reviews": {
                    "type": "array",
                    "description": "reviews",
                    "items": {
                        "type": "string"
                    }
                },
                "reviewTranslations": {
                    "type": "array",
                    "description": "review translations",
                    "items": {
                        "type": "string"
                    }
                },
                "image_url": {
                    "type": "string",
                    "description": "image url"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                },
                "telephone": {
                    "type": "string",
                    "description": "telephone"
                },
                "source": {
                    "type": "string",
                    "description": "source"
                },
                "id": {
                    "type": "string",
                    "description": "id of place"
                },
                "review_counts": {
                    "type": "string",
                    "description": "review counts"
                },
                "category": {
                    "type": "string",
                    "description": "category"
                },
                "translation": {
                    "type": "string",
                    "description": "translation true or false"
                }
            }
        }
    }
}